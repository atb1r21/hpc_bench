#!/bin/bash

# ------------------------------------------------------------------
# A SLURM submission script for running ONETEP QC-tests on IRIDIS5.
# Supports hybrid (MPI/OMP) parallelism.
# 2021.03 Jacek Dziedzic, J.Dziedzic@soton.ac.uk
# ------------------------------------------------------------------

# v1.00 (2021.03.12) Initial version

# ==========================================================================================================
# Do not edit this file, unless you know what you're doing.
# Put it in the 'tests' subdirectory of your ONETEP installation, change to that directory and
# submit it by issuing:
# sbatch qcsubmit.iridis5.2021
# ==========================================================================================================
#
#SBATCH -J QC_tests                   # Name of the job.
#SBATCH -p scavenger                  # The entire QC test suite should be able to finish within 2h.
#SBATCH --ntasks=4                    # Total number of MPI processes in job (might be adjusted down by testcode).
#SBATCH --nodes=1                     # Number of nodes in job.
#SBATCH --ntasks-per-node 4           # Number of MPI processes per node (might be adjusted down by testcode).
#SBATCH --cpus-per-task 10            # Number of OMP threads spawned from each MPI process.
#SBATCH --mem 162000                  # Max memory per node. Preferably leave that be.
#SBATCH --time 02:00:00               # Max time for your job (hh:mm:ss).

# ---------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------
# Fix glitch in module set-up on Iridis5.
export LD_LIBRARY_PATH=`echo $LD_LIBRARY_PATH | sed "s^mkl/2019.3^mkl/intel-mkl-2019.3^g"`

workdir=`pwd`

# Ensure we are started from ONETEP's 'tests' directory.
if [ `echo $workdir | grep -E "/tests$"` ]; then
  onetepdir=`echo $workdir | sed -r "s%/tests$%%"`
else
  echo "!!! This script must be run from the ONETEP installation's tests directory. Aborting!" >&2
  touch "%WAS_RUN_FROM_WRONG_DIR"
  exit 2
fi

onetep_launcher="$onetepdir""/utils/onetep_launcher"

echo "--- This is the submission script, the time is `date`."
echo "--- workdir is '$workdir'."
echo "--- ONETEP's top-level directory is '$onetepdir'."
echo "--- onetep_launcher is '$onetep_launcher'."

# Ensure onetep_launcher is there and is indeed executable.
if [ ! -x "$onetep_launcher" ]; then
  echo "!!! $onetep_launcher does not exist or is not executable. Aborting!" >&2
  touch "%ONETEP_LAUNCHER_MISSING"
  exit 5
fi

# Dump the module list to a file.
module list 2>\$modules_loaded

# Report details
echo "--- Number of nodes as reported by SLURM: $SLURM_JOB_NUM_NODES."
echo "--- Number of tasks as reported by SLURM: $SLURM_NTASKS."
echo "--- Using this srun executable: "`which srun`
echo "--- Executing ONETEP via $onetep_launcher."
 
# Need to set this after Iridis5 scheduler upgrade.
export I_MPI_PMI_LIBRARY=/local/software/slurm/default/lib/libpmi.so

# Tidy any previous runs.
echo "y" | ./testcode/bin/testcode.py --older-than=0 tidy >/dev/null

# Ensure we run via 'srun', on 1 node and a suitable number of MPI ranks (from 'userconfig' and 'jobconfig').
parallel_prefix="srun -N 1 -n tc.nprocs"

# Actually run testcode.
########################################################################################################################################################
./testcode/bin/testcode.py -v -e ../utils/onetep_launcher --user-option onetep launch_parallel "$parallel_prefix" --user-option onetep run_cmd_template 'tc.program tc.args -t 10 tc.input >tc.output 2>tc.error'
########################################################################################################################################################

echo "--- srun finished at `date`."

# Check for error conditions
result=$?
if [ $result -ne 0 ]; then
  echo "!!! srun reported a non-zero exit code $result. Aborting!" >&2
  touch "%SRUN_ERROR"
  exit 6
fi

echo "--- Looks like everything went fine. Praise be."
touch "%DONE"

echo "--- Finished running QC tests at `date`. Examine the .out file to see if they passed."
